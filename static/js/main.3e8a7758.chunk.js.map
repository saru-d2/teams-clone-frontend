{"version":3,"sources":["components/landing.jsx","helpers/socketConfig.js","components/vidGrid.jsx","components/prevChats.jsx","components/chatPane.jsx","components/mainWindow.jsx","App.jsx","config.js","reportWebVitals.js","index.js"],"names":["axios","require","Landing","props","state","errors","formData","onChange","bind","onJoinRoom","onCreateRoom","e","temp","this","target","id","value","setState","reqData","dispName","roomID","console","log","req","post","then","res","data","room_exists","alert","sessionStorage","setItem","history","push","className","type","required","placeholder","onClick","Component","socket","openSocket","Video","ref","useRef","useEffect","peer","on","stream","current","srcObject","playsInline","autoPlay","Room","useState","micStatus","setMic","camStatus","setCam","peers","setPeers","userVideo","userMediaRef","peersRef","toggleMute","toggleCam","getVideoTracks","enabled","MicIcon","Mic","MicOff","VidIcon","Videocam","VideocamOff","navigator","mediaDevices","getUserMedia","video","audio","emit","users","tempPeers","forEach","userID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","peerID","payload","incomingSignal","addPeer","peerObj","find","p","destroy","peersRefCur","filter","muted","map","PrevChats","messages","msg","from","scrollToBottom","msg_list","document","getElementById","scrollTo","scrollHeight","clientHeight","Chat","setMesssages","msg_input","setMsg","getMsgs","Data","name","onKeyPress","key","length","MainWindow","getItem","match","params","defaults","baseURL","App","exact","path","component","vidChat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3e8a7758.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nconst axios = require('axios');\n\n\nexport default class Landing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: {},\n            formData: {}\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onJoinRoom = this.onJoinRoom.bind(this)\n        this.onCreateRoom = this.onCreateRoom.bind(this)\n    }\n\n    onChange(e) {\n        var temp = this.state.formData;\n        temp[e.target.id] = e.target.value;\n        this.setState({ formData: temp });\n    }\n\n    onJoinRoom() {\n        if (this.state.formData['display-name'] == null ||\n            this.state.formData['roomID'] == null) {\n            alert('fill in the roomID and display name')\n            return\n        }\n        var reqData = {\n            dispName: this.state.formData['display-name'],\n            roomID: this.state.formData['roomID'],\n        }\n        console.log({ req: reqData });\n\n        axios.post('/joinRoom', reqData).then(res => {\n            console.log(res)\n            //TODO redirect to room\n            if (res.data.room_exists == false) {\n                alert('room does not exist');\n                return\n            }\n        })\n        sessionStorage.setItem('dispName', reqData.dispName)\n        this.props.history.push(`/${reqData.roomID}`);\n\n    }\n\n    onCreateRoom() {\n        console.log('create room');\n        if (this.state.formData['display-name'] == null ||\n            this.state.formData['roomID'] == null) {\n            alert('fill in the roomID and display name')\n            return\n        }\n        var reqData = {\n            dispName: this.state.formData['display-name'],\n            roomID: this.state.formData['roomID'],\n        }\n        console.log({ req: reqData });\n\n        axios.post('/createRoom', reqData).then(res => {\n            console.log(res)\n            //TODO redirect to room\n            if (res.data.room_exists == true) {\n                alert('room already exists');\n                return\n            }\n        })\n        sessionStorage.setItem('dispName', reqData.dispName)\n        this.props.history.push(`/${reqData.roomID}`);\n    }\n\n    render() {\n        return (\n            <div className='main-pane col centered'>\n                <h1>welcome</h1>\n                <div className='centered rounded-corners'>\n                    <input type=\"text\" required id='display-name' onChange={this.onChange} placeholder='displayName' />\n                </div>\n                <br />\n                <div className='col'>\n                    <input type=\"text\" id='roomID' onChange={this.onChange} placeholder='roomID' />\n                    <div className='row'>\n                        <button className='red btn' onClick={this.onCreateRoom}>create new room</button>\n                        <div className='col'>\n                            <button className='btn red' onClick={this.onJoinRoom}>join room</button>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                )\n    }\n}","import openSocket from 'socket.io-client';\n\nconst SERVER = 'http://localhost:4000'\n// const SERVER = 'https://teams-clone-backend-server.herokuapp.com/'\n\nconst socket = openSocket(SERVER);\n\nexport default socket;","import React, { useEffect, useRef, useState } from \"react\";\nimport Peer from \"simple-peer\";\nimport socket from '../helpers/socketConfig'\nimport {Mic, MicOff, VideocamOff, Videocam} from '@material-ui/icons'\nimport SERVER from '../config'\n// const SERVER = 'https://teams-clone-backend-server.herokuapp.com/'\n\nconst Video = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <video playsInline autoPlay ref={ref} />\n    );\n}\n\n\n\n\nconst Room = (props) => {\n    const [micStatus, setMic] = useState(true)\n    const [camStatus, setCam] = useState(true)\n    const [peers, setPeers] = useState([]);\n    const userVideo = useRef();\n    const userMediaRef = useRef();\n    const peersRef = useRef([]);\n    const dispName = props.dispName\n    const roomID = props.roomID;\n\n    useEffect(() => {\n        socket.on('connection', () =>  {\n            console.log('connected to client')\n        })\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n            userVideo.current.srcObject = stream;\n            userMediaRef.current = stream; \n            socket.emit(\"join room\", roomID);\n            \n            socket.on(\"all users\", users => {\n                const tempPeers = [];\n                console.log(users)\n                users.forEach(userID => {\n                    const peer = createPeer(userID, socket.id, stream);\n                    peersRef.current.push({\n                        peerID: userID,\n                        peer,\n                    })\n                    // tempPeers.push(({peer}));\n                    tempPeers.push({\n                        peerID: userID, \n                        peer, \n                    })\n                })\n                setPeers(tempPeers);\n            })\n\n            socket.on(\"user joined\", payload => {\n                const peer = addPeer(payload.signal, payload.callerID, stream);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peer,\n                })\n\n                setPeers([...peers, {peer, peerID: payload.callerID}]);\n            });\n\n            socket.on(\"user-left\", data => {\n                const id = data.userID;\n                const peerObj = peersRef.current.find(p=> p.peerID == id) \n                if (peerObj) peerObj.peer.destroy();\n                const peersRefCur = peersRef.current.filter(p=> p.peerID !== id)\n                peersRef.current = peersRefCur\n                setPeers(peersRefCur)\n            })\n\n            socket.on(\"receiving returned signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n        })\n    }, []);\n\n    function createPeer(userToSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socket.emit(\"sending signal\", { userToSignal, callerID, signal })\n        })\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socket.emit(\"returning signal\", { signal, callerID })\n        })\n\n        peer.signal(incomingSignal);\n\n        return peer;\n    }\n\n    function stuff(e) {\n        console.log(peers)\n    }\n\n    function toggleMute() {\n        if(userMediaRef.current)\n        // userMediaRef.current.getAudioTracks()[0].enabled = !userMediaRef.current.getAudioTracks()[0].enabled\n        setMic(!micStatus);\n        console.log('mute')\n    }\n    function toggleCam() {\n        if(userMediaRef.current)\n        userMediaRef.current.getVideoTracks()[0].enabled = !userMediaRef.current.getVideoTracks()[0].enabled\n        setCam(userMediaRef.current.getVideoTracks()[0].enabled);\n        console.log('cam')\n    }\n\n    function MicIcon() {\n        // if mic on\n        const enabled = micStatus\n        if (enabled)\n        return (\n            <Mic onClick={toggleMute}/>\n        )\n        else return (\n            <MicOff onClick={toggleMute}/>\n        )\n    }\n\n    function VidIcon() {\n        // if mic on\n        const enabled = camStatus\n        if (enabled)\n        return (\n            <Videocam onClick={toggleCam}/>\n        )\n        else return (\n            <VideocamOff onClick={toggleCam}/>\n        )\n    }\n    return (\n        <div className='left-pane col'>\n        <div className='vidGrid col'>\n            <video muted ref={userVideo} autoPlay playsInline />\n            {peers.map((peer) => {\n                \n                return (\n                    <Video key={peer.peerID} peer={peer.peer} />\n                );\n            })}\n        </div>\n        <div className='controls row'>\n            <MicIcon/>\n            <VidIcon/>\n        </div>\n        </div>\n    );\n};\n\nexport default Room;\n","import React, { useEffect, useRef, useState } from \"react\";\n\n\nconst PrevChats = (props) => {\n    const messages = props.messages;\n\n    return (\n        <ul className='message-list' >\n            {messages.map(msg => {\n                return <li><div className='msg'>{msg.from}:<br /> {msg.msg}<br /></div><br /></li>\n            })}\n\n        </ul>\n    )\n}\n\nexport default PrevChats;","import React, { useEffect, useRef, useState } from \"react\";\nimport axios from 'axios'\nimport socket from '../helpers/socketConfig'\nimport { VariableSizeList as List } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport PrevChats from \"./prevChats\";\nimport { animateScroll } from \"react-scroll\";\n\nfunction scrollToBottom() {\n    console.log('scroll')\n    const msg_list = document.getElementById('msg-list')\n    console.log(msg_list)\n    msg_list.scrollTo(0, msg_list.scrollHeight - msg_list.clientHeight)\n}\n\nconst Chat = (props) => {\n    const [error, setError] = useState([])\n    const [messages, setMesssages] = useState([])\n    const [msg_input, setMsg] = useState('')\n    const dispName = props.dispName\n    const roomID = props.roomID\n\n\n\n    useEffect(() => {\n        scrollToBottom()\n        getMsgs()\n        socket.on('msg-sent', (Data) => {\n            console.log('new-messages');\n            // getMsgs();\n            console.log(Data)\n            scrollToBottom()\n\n            setMesssages(Data)\n        })\n        scrollToBottom()\n\n    }, [])\n\n    const getMsgs = () => {\n        const reqData = { roomID: roomID }\n        console.log('getmsgs')\n        axios.post('/getMsg', reqData).then(res => {\n            setMesssages(res.data.msg_list)\n        })\n        scrollToBottom()\n    }\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            //TODO send msg through axios\n            // getMsgs()\n            // socket.emit('new-msg', (roomID));\n\n            if (msg_input.length > 0) {\n                const reqData = {\n                    msg: msg_input,\n                    from: dispName,\n                    roomID: roomID,\n                }\n                console.log({ reqData })\n                // axios.post('/sendMsg', reqData).then(res => {\n                //     // console.log(res);\n                // })\n                socket.emit('new-msg', (reqData));\n                setMsg('')\n                var chat_input = document.getElementById('chat-input');\n                chat_input.value = ''\n            }\n        }\n    }\n\n    const onChanegMsg = (e) => {\n        setMsg(e.target.value);\n    }\n\n    return (\n        <div className=\"chat-pane col\">\n            <div className='prev-chats' id='msg-list'>\n                <PrevChats messages={messages} />\n            </div>\n            <div className='chat-input' >\n                <input type=\"text\" name=\"chat-input\" id=\"chat-input\" onKeyPress={handleKeyPress} onChange={onChanegMsg} id='chat-input' />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat","import React, { useEffect, useRef, useState } from \"react\";\nimport Room from './vidGrid'\nimport Chat from './chatPane'\nimport socketClient from \"socket.io-client\";\nimport SERVER from '../config'\n\nconst axios = require('axios');\n\n\nconst MainWindow = (props) => {\n    const dispName = sessionStorage.getItem('dispName')\n    const roomID = props.match.params.roomID\n\n\n    return (\n        <div className='main-pane row'>\n            <Room roomID={roomID} dispName={dispName} />\n            <div className='right-pane col'>\n                <Chat dispName={dispName} roomID={roomID}/>\n            </div>\n        </div>\n    )\n  \n}\n\nexport default MainWindow;\n","import './App.css';\nimport axios from 'axios';\nimport { Redirect, HashRouter as Router, Route } from 'react-router-dom';\nimport Landing from './components/landing'\nimport vidChat from './components/mainWindow'\n \nimport SERVER from './config'\naxios.defaults.baseURL = SERVER;\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path = '/' component={Landing} />\n      <Route exact path = '/:roomID' component={vidChat} />\n    </Router>\n  );\n}\n\nexport default App;\n","// const SERVER = 'http://localhost:4000'\nconst SERVER = 'https://teams-clone-backend-server.herokuapp.com/'\n\nexport default SERVER;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}